"""Sync class session and attendance

Revision ID: 20ab55522d8b
Revises: 843e0cb363ac
Create Date: 2025-10-23 21:50:52.181096

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20ab55522d8b'
down_revision: Union[str, None] = '843e0cb363ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('attendance_records', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('attendance_records', sa.Column('created_by', sa.UUID(), nullable=True))
    op.add_column('attendance_records', sa.Column('updated_by', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'attendance_records', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'attendance_records', 'users', ['updated_by'], ['id'])
    op.add_column('class_sessions', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('class_sessions', sa.Column('created_by', sa.UUID(), nullable=True))
    op.add_column('class_sessions', sa.Column('updated_by', sa.UUID(), nullable=True))
    op.drop_index('idx_class_sessions_date_status', table_name='class_sessions')
    op.drop_index('idx_class_sessions_date_teacher', table_name='class_sessions')
    op.create_foreign_key(None, 'class_sessions', 'users', ['updated_by'], ['id'])
    op.create_foreign_key(None, 'class_sessions', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'classes', 'users', ['created_by'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'classes', type_='foreignkey')
    op.create_foreign_key('fk_c_created_by', 'classes', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_constraint(None, 'class_sessions', type_='foreignkey')
    op.drop_constraint(None, 'class_sessions', type_='foreignkey')
    op.create_index('idx_teacher_schedule_conflict', 'class_sessions', ['teacher_id', 'session_date', 'start_time', 'end_time'], unique=True, postgresql_where="(status <> ALL (ARRAY['cancelled'::session_status, 'postponed'::session_status]))")
    op.create_index('idx_room_schedule_conflict', 'class_sessions', ['room_id', 'session_date', 'start_time', 'end_time'], unique=True, postgresql_where="((status <> ALL (ARRAY['cancelled'::session_status, 'postponed'::session_status])) AND (room_id IS NOT NULL))")
    op.create_index('idx_class_sessions_teacher', 'class_sessions', ['teacher_id'], unique=False)
    op.create_index('idx_class_sessions_status', 'class_sessions', ['status'], unique=False)
    op.create_index('idx_class_sessions_room', 'class_sessions', ['room_id'], unique=False)
    op.create_index('idx_class_sessions_date_teacher', 'class_sessions', ['session_date', 'teacher_id'], unique=False)
    op.create_index('idx_class_sessions_date_status', 'class_sessions', ['session_date', 'status'], unique=False)
    op.create_index('idx_class_sessions_date', 'class_sessions', ['session_date'], unique=False)
    op.create_index('idx_class_sessions_class_id', 'class_sessions', ['class_id'], unique=False)
    op.drop_column('class_sessions', 'updated_by')
    op.drop_column('class_sessions', 'created_by')
    op.drop_column('class_sessions', 'deleted_at')
    op.drop_constraint(None, 'attendance_records', type_='foreignkey')
    op.drop_constraint(None, 'attendance_records', type_='foreignkey')
    op.create_index('idx_attendance_unique', 'attendance_records', ['session_id', 'student_id'], unique=True)
    op.create_index('idx_attendance_student_date', 'attendance_records', ['student_id', 'created_at'], unique=False)
    op.create_index('idx_attendance_student', 'attendance_records', ['student_id'], unique=False)
    op.create_index('idx_attendance_status', 'attendance_records', ['status'], unique=False)
    op.create_index('idx_attendance_session_status', 'attendance_records', ['session_id', 'status'], unique=False)
    op.create_index('idx_attendance_date', 'attendance_records', ['created_at'], unique=False)
    op.drop_column('attendance_records', 'updated_by')
    op.drop_column('attendance_records', 'created_by')
    op.drop_column('attendance_records', 'deleted_at')
    # ### end Alembic commands ###
